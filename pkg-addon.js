const fs = require('fs')
const path = require('path')
const version = `v${require('./package.json').version}`
const css = fs.readFileSync(path.resolve(__dirname, 'dist/css/geocoding-sheet.css'), {encoding: 'utf-8'})
const polyfill = fs.readFileSync(path.resolve(__dirname, 'dist/js/babel-polyfill.js'), {encoding: 'utf-8'})
let js = fs.readFileSync(path.resolve(__dirname, 'dist/js/geocoding-sheet.js'), {encoding: 'utf-8'})
let html = fs.readFileSync(path.resolve(__dirname, 'dist/index.html'), {encoding: 'utf-8'})
let code = fs.readFileSync(path.resolve(__dirname, 'src/js/Code.js'), {encoding: 'utf-8'})
html = html.replace(/<!--version-->/, version)
fs.writeFileSync(path.resolve(__dirname, 'gcp/index.html'), html, {encoding: 'utf-8'})
code = code.replace(/\/\* for testing[\s\S]+/g, '')
code = code.replace(/\/\*version\*\//, `/*${version}*/`)
fs.writeFileSync(path.resolve(__dirname, 'gcp/Code.gs'), code, {encoding: 'utf-8'})
fs.copyFileSync(path.resolve(__dirname, 'dist/css/geocoding-sheet.css'), path.resolve(__dirname, 'gcp/geocoding-sheet.css'))
fs.copyFileSync(path.resolve(__dirname, 'dist/js/geocoding-sheet.js'), path.resolve(__dirname, 'gcp/geocoding-sheet.js'))
fs.copyFileSync(path.resolve(__dirname, 'dist/js/babel-polyfill.js'), path.resolve(__dirname, 'gcp/babel-polyfill.js'))
require('./help/md2html')